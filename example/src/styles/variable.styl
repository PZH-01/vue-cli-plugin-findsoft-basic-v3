/*
  样式变量——以后可能有用
*/

json('./antd.json', false, "$") // 系统主题样式——控制antd组件库样式
json('./self.json', false, "$") // 其他全局变量
/*
  json(地址，哈希(应该是哈希，但应该对应的是一个settingOption)，前缀)
  
  原理&目标：
    1、sass可以通过 :export的方式暴露变量
    2、stylus实现——大致原理：通过json文件，实现变量共享
    3、在vue的stylus中使用变量√
      3-1：直接在标签引入：~表示当前根目录，后面就慢慢往外层文件夹跳出
      3-eg：@import '~/../../../../styles/variable.styl'
    4、在js中使用：import导入的方式
      4-1：需要更改tsconfig.json
      4-2：{
            "compilerOptions": {
              "module": "commonjs",
              "resolveJsonModule": true,
              "esModuleInterop": true
            }
          }
  注：
    1、引入的json文件不能打注释，打了注释stylus解析会失败，如果加了然后抱错，那么就得重新跑一次项目🙄
    2、因为是引入的json文件，所以如果对json文件做了修改，保存不会立马有效果，需要重新加载一次(可以在这个页面做个修改，然后重新加载)😅
    3、用两个json文件的原因，区别组件样式和自定义样式变量
  解析方式为：
    1、{}会转化为 - ，有时间看看 写个递归处理成和json一样用 - 的形式（不过不一定是必要的，毕竟可以链式操作）
    2、json文件里可以写 "primary-color" 的方式，也可以用{}。看具体需要
  参考链接🔗：
    1、json https://github.com/stylus/stylus/issues/2441
    2、sass https://www.bluematador.com/blog/how-to-share-variables-between-js-and-sass
    3、stylus https://medium.com/qbits/sharing-variables-between-stylus-and-react-324bf3b43f33
    4、import https://blog.csdn.net/qq_40686529/article/details/103742902
    5、tsconfig https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html
    6、antd-less https://github.com/vueComponent/ant-design-vue/blob/master/components/style/themes/default.less
*/

.btns-link-primary
  color $primary-color
